esphome:
  name: laundrysensor
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 10.30.2.5
    gateway: 10.30.0.1
    subnet: 255.255.0.0
    
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Laundry Fallback"
    password: !secret ap_fallback_pass

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_enc

ota:
  password: !secret ota_pass
  
substitutions:
  name: Laundry
  
binary_sensor:
  - platform: status
    name: "LaundryBot"
  - platform: gpio
    pin: D2
    name: "washer"
    device_class: vibration
    filters:
    - delayed_on: 10ms
    - delayed_off: 5min
  - platform: gpio
    pin: D3
    name: "dryer"
    device_class: vibration
    filters:
    - delayed_on: 10ms
    - delayed_off: 5min
  #    https://github.com/rmooreID/Home-Assistant-Appliance-Monitor/
  
text_sensor: #Human Readable Uptime
  - platform: template
    name: $name Uptime
    id: uptime_human
    icon: mdi:clock-start

sensor:
  - platform: uptime #Uptime in Seconds
    name: $name Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    internal: True
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
              
switch:
  - platform: restart
    name: "$name Restart"